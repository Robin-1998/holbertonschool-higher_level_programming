>>> module = __import__("2-matrix_divided")
>>> module.matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]
>>> module.matrix_divided([[10, 20], [30, 40]], 10)
[[1.0, 2.0], [3.0, 4.0]]
>>> module.matrix_divided([[1, 2], [3, "a"]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> module.matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> module.matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> module.matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> module.matrix_divided([[None, 2], [4, 8]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([["s", "d"], [4, 8]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[4, 8], [16, 28]], None)
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> module.matrix_divided([[4, 8], [16, 28]], "Hello")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> module.matrix_divided([], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[]], 2)
[[]]
