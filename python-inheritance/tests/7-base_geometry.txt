>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
# ---------------------------------------
# TEST SUR LA CLASSE BASEGEOMETRY
# ---------------------------------------
# :test_tube: Test que bg est bien une instance de BaseGeometry
>>> isinstance(bg, BaseGeometry)
True
>>> type(bg).__name__
'BaseGeometry'
# ---------------------------------------
# TEST SUR LA METHODE AREA
# ---------------------------------------
# :test_tube: Test de la méthode area (doit lever une exception)
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
# ---------------------------------------
# TEST SUR LA METHODE INTEGER_VALIDATOR
# ---------------------------------------
# :test_tube: Test avec aucuns arguments
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
# :test_tube: Test de integer_validator avec des valeurs valides
>>> bg.integer_validator("width", 10)
# :test_tube: Test que name est bien utilisé dans les messages d'erreur
# :test_tube: Test que value n'est pas une string
>>> bg.integer_validator("poids", "lourd")
Traceback (most recent call last):
...
TypeError: poids must be an integer
# :test_tube: Test avec (None, None)
>>> bg.integer_validator(None, None)
Traceback (most recent call last):
...
TypeError: None must be an integer
# :test_tube: Test avec une valeur == 0
>>> bg.integer_validator("size", 0)
Traceback (most recent call last):
...
ValueError: size must be greater than 0
# :test_tube: Test avec un booléen
>>> bg.integer_validator("actif", True)
Traceback (most recent call last):
...
TypeError: actif must be an integer
# :test_tube: Test avec une liste
>>> bg.integer_validator("collection", [1, 2, 3])
Traceback (most recent call last):
...
TypeError: collection must be an integer
# :test_tube: Test avec un set
>>> bg.integer_validator("name", {1})
Traceback (most recent call last):
...
TypeError: name must be an integer
# :test_tube: Test avec un tuple
>>> bg.integer_validator("ensemble", (1, 2))
Traceback (most recent call last):
...
TypeError: ensemble must be an integer
